<?php

namespace App\DataFixtures;

use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use App\Entity\Course;
use App\Entity\Lesson;

class AppFixtures extends Fixture
{
    public function load(ObjectManager $manager): void
    {
        // $product = new Product();
        // $manager->persist($product);
        $courses = [
            'pythonDeveloper' => new Course(),
            'layoutDesigner' => new Course(),
            'webDeveloper' => new Course(),
        ];

        $courses['pythonDeveloper']
        ->setCharacterCode('pydev')
        ->setName('Python-разработчик')
        ->setDescription('Станьте инженером-программистом на одном из 
        самых простых и популярных языков программирования Python. 
        На практике научитесь понимать фундаментальные алгоритмы и использовать 
        их для решения задач. Вы сможете писать сайты, приложения, 
        нейросети и программы для научных исследований, 
        Telegram-бота. 
        Вы сможете трудоустроиться после 9 месяцев обучения.');

        $courses['layoutDesigner']
        ->setCharacterCode('layoutdesigner')
        ->setName('Верстальщик')
        ->setDescription('Станьте верстальщиком и вы 
        сможете создавать сайты по макетам дизайнера с нуля и в 
        CMS-системах. Вы научитесь с помощью CSS и языка HTML 
        описывать расположение блоков, картинок, текста и видео, 
        а так же анимировать их. А изучив язык JavaScript, 
        добавите к ним бизнес-логику, динамику и 
        настроить работу с данными по api.');

        $courses['webDeveloper']
        ->setCharacterCode('webdev')
        ->setName('Веб-разработчик')
        ->setDescription('Станьте веб-разработчиком и получите одну 
        из самых востребованных профессий в IT. 
        Вы изучите основы программирования, принципы 
        работы баз данных и основные алгоритмы, а также 
        овладеете необходимыми технологиями и программами. 
        На практике освоите языки JavaScript и TypeScript, 
        научитесь создавать адаптивные сайты и интерактивные веб-приложения. 
        Через 9 месяцев вы сможете трудоустроиться.');


        $pythonLessons = [];
        $layoutDesignerLessons = [];
        $webDeveloperLessons = [];

        for ($i = 0; $i < 4; $i++) {
            $pythonLessons[$i] = new Lesson();
            $pythonLessons[$i]->setSequenceNumber($i + 1);
            $layoutDesignerLessons[$i] = new Lesson();
            $layoutDesignerLessons[$i]->setSequenceNumber($i + 1);
            $webDeveloperLessons[$i] = new Lesson();
            $webDeveloperLessons[$i]->setSequenceNumber($i + 1);
        }

        $pythonLessons[0]
        ->setName('Основы синтаксиса')
        ->setContent('Синтаксис языка Python, как и сам язык, очень прост.

        Синтаксис
        Конец строки является концом инструкции (точка с запятой не требуется).
        
        Вложенные инструкции объединяются в блоки по величине отступов. 
        Отступ может быть любым, главное, 
        чтобы в пределах одного вложенного блока отступ был одинаков.
         И про читаемость кода не забывайте. 
         Отступ в 1 пробел, к примеру, не лучшее решение. 
         Используйте 4 пробела (или знак табуляции, на худой конец).
        
        Вложенные инструкции в Python записываются 
        в соответствии с одним и тем же шаблоном, 
        когда основная инструкция завершается двоеточием, 
        вслед за которым располагается вложенный блок кода, 
        обычно с отступом под строкой основной инструкции.');


        $pythonLessons[1]
        ->setName('Переменные и типы данных')
        ->setContent('Переменные предназначены для хранения данных. 
        Название переменной в Python должно начинаться с алфавитного символа 
        или со знака подчеркивания и может 
        содержать алфавитно-цифровые символы и знак подчеркивания. 
        И кроме того, название переменной не должно 
        совпадать с названием ключевых слов языка Python.
        
        Переменная хранит данные одного из типов данных. 
        В Python существует множество различных типов данных. 
        В данном случае рассмотрим 
        только самые базовые типы: bool, int, float, complex и str.
        
        Python является языком с динамической типизацией. 
        А это значит, что переменная не привязана жестко с определенному типу.

        Тип переменной определяется исходя из значения, 
        которое ей присвоено. 
        Так, при присвоении строки в двойных 
        или одинарных кавычках переменная имеет тип str. 
        При присвоении целого числа 
        Python автоматически определяет тип переменной как int. 
        Чтобы определить переменную как объект float, 
        ей присваивается дробное число, 
        в котором разделителем целой и дробной части является точка.');

        $pythonLessons[2]
        ->setName('Условные конструкции')
        ->setContent('Условные конструкции используют условные выражения
         и в зависимости от их значения направляют выполнение программы
         по одному из путей. Одна из таких конструкций - это конструкция if.
        
         В самом простом виде после ключевого слова if идет логическое выражение.
         И если это логическое выражение возвращает True, 
         то выполняется последующий блок инструкций, 
         каждая из которых должна начинаться с новой 
         строки и должна иметь отступы от начала выражения if.');

        $pythonLessons[3]
        ->setName('Циклы')
        ->setContent('Циклы позволяют выполнять некоторое действие
         в зависимости от соблюдения некоторого условия. 
         В языке Python есть следующие типы циклов: for и while.

         Цикл while проверяет истинность некоторого условия, 
         и если условие истинно, то выполняет инструкции цикла.
         Цикл for пробегается по набору значений,
         помещает каждое значение в переменную, 
         и затем в цикле мы можем с этой переменной 
         производить различные действия.');

        $layoutDesignerLessons[0]
        ->setName('Figma')
        ->setContent('Figma — онлайн-сервис для разработки интерфейсов 
        и прототипирования с возможностью 
        организации совместной работы в режиме реального времени.

        Сервис доступен по подписке, 
        предусмотрен бесплатный тарифный план для одного пользователя. 
        Имеются офлайн-версии для Windows, macOS. 
        Реализована интеграция с корпоративным мессенджером Slack 
        и инструментом прототипирования Framer. 
        Используется как для создания упрощённых прототипов интерфейсов,
        так и для детальной проработки дизайна
        интерфейсов мобильных приложений, веб-сайтов, 
        корпоративных порталов.');

        $layoutDesignerLessons[1]
        ->setName('HTML')
        ->setContent('HTML 
        (от англ. HyperText Markup Language — «язык гипертекстовой разметки») — 
        стандартизированный язык 
        гипертекстовой разметки документов для просмотра веб-страниц в браузере. 
        Веб-браузеры получают HTML документ от сервера по 
        протоколам HTTP/HTTPS или открывают с локального диска, 
        далее интерпретируют код в интерфейс, 
        который будет отображаться на экране монитора.

        Элементы HTML являются строительными блоками HTML страниц. 
        С помощью HTML разные конструкции, изображения и другие объекты,
        такие как интерактивная веб-форма,
        могут быть встроены в отображаемую страницу. 
        HTML предоставляет средства для создания 
        заголовков, абзацев, списков, ссылок,
        цитат и других элементов. Элементы HTML выделяются тегами, 
        записанными с использованием угловых скобок.
        Такие теги, как img  и input ,
        напрямую вводят контент на страницу. 
        Другие теги, такие как p, окружают и оформляют текст внутри себя
        и могут включать другие теги в качестве подэлементов. 
        Браузеры не отображают HTML-теги, 
        но используют их для интерпретации содержимого страницы.
        
        Язык XHTML является более строгим вариантом HTML, 
        он следует синтаксису XML 
        и является приложением языка XML 
        в области разметки гипертекста');

        $layoutDesignerLessons[2]
        ->setName('CSS')
        ->setContent('CSS (англ. Cascading Style Sheets «каскадные таблицы стилей»)
         — формальный язык описания внешнего вида документа (веб-страницы), 
         написанного с использованием языка разметки (чаще всего HTML или XHTML). 
         Также может применяться к любым XML-документам, например, к SVG или XUL.');

        $layoutDesignerLessons[3]
        ->setName('Bootstrap')
        ->setContent('Bootstrap — свободный набор инструментов для 
        создания сайтов и веб-приложений. 
        Включает в себя HTML- и CSS-шаблоны оформления для типографики, 
        веб-форм, кнопок, меток, 
        блоков навигации и прочих компонентов веб-интерфейса, 
        включая JavaScript-расширения.');


        $webDeveloperLessons[0]
        ->setName('Введение')
        ->setContent('Веб-разработка — процесс создания веб-сайта или веб-приложения. 
        Основными этапами процесса являются веб-дизайн, вёрстка страниц,
         программирование на стороне клиента и сервера, а также конфигурирование веб-сервера.
        
        На сегодняшний день существуют несколько этапов разработки веб-сайта:

        - Проектирование сайта или веб-приложения (сбор и анализ требований, разработка технического задания, 
        проектирование интерфейсов);
        - Разработка креативной концепции сайта;
        - Создание дизайн-концепции сайта;
        - Создание макетов страниц;
        - Создание мультимедиа-объектов;
        - Вёрстка страниц и шаблонов;
        - Программирование (разработка функциональных инструментов) 
        или интеграция в систему управления содержимым (CMS);
        - Оптимизация и размещение[уточнить] материалов сайта;
        - Тестирование и внесение корректировок;
        - Публикация проекта на хостинге;
        - Обслуживание работающего сайта или его программной основы.
        В зависимости от текущей задачи, какие-то из этапов могут отсутствовать.
        ');

        $webDeveloperLessons[1]
        ->setName('Front-end')
        ->setContent('Фронтенд (англ. frontend) — презентационная часть информационной или программной системы, 
        её пользовательский интерфейс и связанные с ним компоненты; 
        применяется в соотношении с базисной частью системы, 
        её внутренней реализацией, называемой в этом случае бэкендом (англ. backend).
        
        Разделение программных систем на фронтенд и бэкенд — 
        одно из стандартных решений для архитектуры программного обеспечения, 
        связанное в программной инженерии с принципом разделения ответственности 
        между внешним представлением и внутренней реализацией. 
        Как правило, бэкенд реализует API, используемые фронтендом, 
        и таким образом фронтенд-разработчику не нужно знать особенности реализации внутренней части,
        а бэкенд-разработчику — интерфейсные решения. 
        Кроме того, такое разделение позволяет использовать различные инструменты 
        для реализации внутренней и внешней части системы, более эффективные для соответствующих задач. 
        Например, в веб-разработке к технологиям фронтенда относятся HTML, CSS, JavaScript;
        ');

        $webDeveloperLessons[2]
        ->setName('Back-end')
        ->setContent('Бэкенд (англ. backend) —  Внутренняя составляющая сайта, его “начинка”, 
        административная зона. 
        То есть та часть сайта, 
        которая работает на сервере: 
        получает запросы от пользователей из фротэнда и обрабатывает их. 
        С Back-end работают администраторы сайта и программисты.
        
        Для бэкенда вы можете использовать любые инструменты, 
        доступные на вашем сервере 
        (который, по сути, является просто компьютером, настроенным для ответов на сообщения). 
        Это означает, что вы можете использовать любой универсальный язык программирования: 
        Ruby, PHP, Python, Java, JavaScript / Node, bash. 
        Это также означает, что вы можете использовать системы управления базами данных, 
        такие как MySQL, PostgreSQL, MongoDB, Cassandra, Redis, Memcached.
        ');

        $webDeveloperLessons[3]
        ->setName('GIT')
        ->setContent('Git (произносится «гит»[7]) — распределённая система управления версиями.
        
        Система управления версиями (также используется определение «система контроля версий[1]», 
        (от англ. Version Control System, VCS или Revision Control System) — 
        программное обеспечение для облегчения работы с изменяющейся информацией. 
        Система управления версиями позволяет хранить несколько версий одного и того же документа, 
        при необходимости возвращаться к более ранним версиям, определять, 
        кто и когда сделал то или иное изменение, и многое другое.
        Такие системы наиболее широко используются при разработке программного обеспечения для хранения исходных 
        кодов разрабатываемой программы. 
        Однако они могут с успехом применяться и в других областях, 
        в которых ведётся работа с большим количеством непрерывно изменяющихся электронных документов. 
        В частности, системы управления версиями применяются в САПР, 
        обычно в составе систем управления данными об изделии (PDM). 
        Управление версиями используется в инструментах конфигурационного управления 
        (Software Configuration Management Tools).');


        for ($i = 0; $i < 4; $i++) {
            $courses['pythonDeveloper']->addLesson($pythonLessons[$i]);
            $courses['layoutDesigner']->addLesson($layoutDesignerLessons[$i]);
            $courses['webDeveloper']->addLesson($webDeveloperLessons[$i]);
        }

        foreach ($courses as $course) {
            $manager->persist($course);
        }

        $manager->flush();
    }
}
